// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: issues.sql

package store

import (
	"context"
)

const getIssues = `-- name: GetIssues :many
SELECT id, title, description, reporter_id, assignee_id, status, priority, type, created_at, updated_at, removed_at FROM issues
`

func (q *Queries) GetIssues(ctx context.Context) ([]*Issue, error) {
	rows, err := q.db.Query(ctx, getIssues)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []*Issue{}
	for rows.Next() {
		var i Issue
		if err := rows.Scan(
			&i.ID,
			&i.Title,
			&i.Description,
			&i.ReporterID,
			&i.AssigneeID,
			&i.Status,
			&i.Priority,
			&i.Type,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.RemovedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
